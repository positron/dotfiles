# This file contains bash settings and aliases that are
# used by every PC I have. It is sourced by .zshrc so
# the original zshrc for each system stays in place.

export EDITOR=nvim

# --no-ignore-vcs makes it ignore .gitignore
export FZF_DEFAULT_COMMAND='fd --type f'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
FZF_CTRL_R_OPTS=()
FZF_CTRL_R_OPTS+=(--height 20%)

# line editing like vim
set -o vi

# vim: automatically open multiple files in tabs
alias vim="vim -p"
alias nvim="nvim -p"
alias v="nvim -p"

# ls aliases
export CLICOLOR=1
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# git aliases
alias g='git'
# complete for 'g' as well as 'git'
# complete -o default -o nospace -F _git g
alias gs='git status'
alias gd='git diff'
alias gdc='git diff --cached'
alias gc='git commit'
alias gl='git log --graph --full-history --branches --remotes --tags --color --pretty=format:"%x1b[31m%h%x09%x1b[32m%d%x1b[0m%x20%s %Cgreen(%cr) %C(bold blue)<%an>%Creset" --abbrev-commit'
alias gitsearch='git rev-list --all | xargs git grep -F'

# Pretty print json
alias json="python -mjson.tool"

function mcd() {
  mkdir -p "$1" && cd "$1";
}

function undozip(){
  unzip -l "$1" |  awk 'BEGIN { OFS="" ; ORS="" } ; { for ( i=4; i<NF; i++ ) print $i " "; print $NF "\n" }' | xargs -I{} rm -r {}
}

# Uninstall old kernels
cleankernels() {
    dpkg -l 'linux-*' | sed '/^ii/!d;/'"$(uname -r | sed "s/\(.*\)-\([^0-9]\+\)/\1/")"'/d;s/^[^ ]* [^ ]* \([^ ]*\).*/\1/;/[0-9]/!d' | xargs sudo apt-get purge --yes
}

alias aptupgrade='sudo apt-get update && sudo apt-get upgrade --yes && sudo apt-get clean --yes'

alias reload='source $HOME/.zshrc 1>/dev/null'

alias myip='curl ip.appspot.com'

# Server current directory on localhost:8765
# Works for versions less than 3. Py3 is python "-m http.server 8765"
alias servethis="python -c 'import SimpleHTTPServer; SimpleHTTPServer.test()'"

if [ -f /proc/version ] && [ grep -q Microsoft /proc/version ]; then
  # Fix everything being highlighted in light green (due to the group
  # write bit being set or something like that)
  export LS_COLORS=$(echo $LS_COLORS | sed "s/ow=34;42/ow=01;34/g")
fi

# Only works on OS X obviously
alias setJdk8='export JAVA_HOME=$(/usr/libexec/java_home -v 1.8)'
alias setJdk9='export JAVA_HOME=$(/usr/libexec/java_home -v9)'
alias setJdk10='export JAVA_HOME=$(/usr/libexec/java_home -v10)'
alias setJdk11='export JAVA_HOME=$(/usr/libexec/java_home -v11)'
alias setJdk17='export JAVA_HOME=$(/usr/libexec/java_home -v17)'


export HISTSIZE=100000         # big big history, but note we use atuin instead
export HISTFILESIZE=1000000
setopt HIST_FIND_NO_DUPS

# alias basic CLI commands to modern fancy equivalents
# cat -> bat
# du -> duf
# watch -> viddy
# ls -> eza
# top -> btop
# 
# They all mirror the original when piping, but keep the original as `old<cmd>` just in case
if command -v bat &>/dev/null; then
    alias cat='bat'
    alias oldcat='command cat'  # Access original cat if needed
    btail() {
        tail -f "$1" | bat --paging=never -l log
    }
fi
if command -v duf &>/dev/null; then
    alias du='duf'
    alias olddu='command du'
fi
# duf isn't quite the same as df.. I'm confused by how it's advertised
#if command -v duf &>/dev/null; then
#    alias du='duf'
#    alias olddu='command du'
#fi
if command -v viddy &>/dev/null; then
    alias watch='viddy'
    alias oldwatch='command watch'
fi
if command -v eza &>/dev/null; then
    alias ls='eza'
    alias oldls='command ls'
fi
if command -v btop &>/dev/null; then
    alias top='btop'
    alias oldtop='command top'
fi
# TODO: try dog instead of dig, but unmaintained https://github.com/ogham/dog
#
eval "$(atuin init zsh --disable-up-arrow)"
